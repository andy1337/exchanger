const { Markup } = require("telegraf");

const declOfNum = (n, titles) => titles[
  n % 10 === 1 && n % 100 !== 11
    ? 0
    : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)
      ? 1
      : 2
];

const moment = require("../../utils/moment")

module.exports = async (ctx) => {

  const daysWithUs = moment().diff(moment(ctx.state.worker.createdAt), "days");
  const hoursWithUs = moment().diff(moment(ctx.state.worker.createdAt), "hours");
  const minutesWithUs = moment().diff(moment(ctx.state.worker.createdAt), "minutes");

  const secondsWithUs = moment().diff(moment(ctx.state.worker.createdAt), "seconds");

  let withUsText = `${daysWithUs} ${declOfNum(daysWithUs, ["–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π"])}`;

  if (daysWithUs < 1) {
    withUsText = `${hoursWithUs} ${declOfNum(hoursWithUs, ["—á–∞—Å", "—á–∞—Å–∞", "—á–∞—Å–æ–≤"])}`;
  }

  if (hoursWithUs < 1) {
    withUsText = `${minutesWithUs} ${declOfNum(minutesWithUs, ["–º–∏–Ω—É—Ç—É", "–º–∏–Ω—É—Ç—ã", "–º–∏–Ω—É—Ç"])}`;
  }
  if (minutesWithUs < 1) {
    withUsText = `${secondsWithUs} ${declOfNum(secondsWithUs, ["—Å–µ–∫—É–Ω–¥—É", "—Å–µ–∫—É–Ω–¥—ã", "—Å–µ–∫—É–Ω–¥"])}`;
  }

  const usertag = ctx.state.worker.tag === null ? "–ù–µ —É–∫–∞–∑–∞–Ω" : ctx.state.worker.tag
  const wallet = ctx.state.worker.wallet === null ? "–ù–µ —É–∫–∞–∑–∞–Ω" : ctx.state.worker.wallet

  const message = [
    `<b>üí† –ü—Ä–∏–≤–µ—Ç,</b> <code>${ctx.state.worker.username}</code>`,
    "",
    //"<i>üåê –ö–æ–ª-–≤–æ —Ç–≤–æ–∏—Ö –ø—Ä–æ—Ñ–∏—Ç–æ–≤:</i> <b>{profits_count}</b>",
    //"<i>üíµ –°—É–º–º–∞ —Ç–≤–æ–∏—Ö –ø—Ä–æ—Ñ–∏—Ç–æ–≤:</i> <b>{profits_sum}</b>",
    `<i>üëÅ‚Äçüó® –¢–µ–≥:</i> <b>${usertag}</b>`,
    `<i>üí∞ USDT-–∞–¥—Ä–µ—Å:</i> <b>${wallet}</b>`,
    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
    `<b>¬ÆÔ∏è –¢—ã —Å –Ω–∞–º–∏ —É–∂–µ ${withUsText}</b>`,
  ]


  return ctx.replyOrEdit(message.join("\r\n"), {
    parse_mode: "HTML",
    reply_markup: Markup.inlineKeyboard([
      [
        Markup.callbackButton(
          "–ú–æ—è —Å—Å—ã–ª–∫–∞",
          "user#link"
        ),
      ],
      [
        Markup.callbackButton(
          "–ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã",
          "user#profits#1"
        ),
      ],
      [
        Markup.callbackButton(
          "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
          "user#settings"
        ),
      ],
      [
        Markup.urlButton(`üë• –ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤`, process.env.CHAT_LINK),
        Markup.urlButton(`üí∏ –í—ã–ø–ª–∞—Ç—ã`, process.env.PAYOUT_LINK)
      ]
    ]),
  })
};