const { Markup } = require("telegraf");

const { Profit } = require("../database");
const { converter } = require("../../utils/converter");

module.exports = async (ctx, id) => {
  try {
    const profit = await Profit.findOne({
      where: {
        id,
        userId: ctx.state.worker.id,
      },
    });

    if (!profit) {
      return ctx.replyOrEdit("‚ùå –ü—Ä–æ—Ñ–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", {
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("üîô –ù–∞–∑–∞–¥", "my#profits#1")],
        ]),
      })
    }

    const convertedAmount = await converter(profit.fromAmount, profit.fromId)

    const message = [
      `üí∞ –ü—Ä–æ—Ñ–∏—Ç #${profit.id}`,
      "",
      `üí∏ –°—É–º–º–∞: <b>${profit.fromAmount} ${profit.from} / ${convertedAmount} USD</b>`,
      `üö¶ –°—Ç–∞—Ç—É—Å: <b>${profit.status == 0 ? "–í –æ–∂–∏–¥–∞–Ω–∏–∏ ‚è≥" : "‚úÖ –í—ã–ø–ª–∞—á–µ–Ω–æ"}</b>`
    ]
  
    return ctx.replyOrEdit(message.join("\r\n"),
        {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", "user#profits#1")],
          ]),
        }
      )
  } catch(err) {
    console.log(err)
  }

};