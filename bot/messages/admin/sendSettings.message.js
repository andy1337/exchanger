const { Markup } = require("telegraf");

const { Setting } = require("../../database");

const moment = require("../../../utils/moment")

module.exports = async (ctx) => {
    const tech = await Setting.findOne({
        where: {
            key: "tech"
        }
    })
    const techValue = JSON.parse(tech.value);

    const profitPercent = await Setting.findOne({
        where: {
            key: "profit_percent"
        }
    })

    console.log(profitPercent)

   
    const message = [
        `‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏`,
        "",
        `üõ† <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤</b>: ${techValue.techOn ? "üü© –í–∫–ª—é—á–µ–Ω" : "üü• –í—ã–∫–ª—é—á–µ–Ω"}`,
        `üîÖ <b>–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–ª–∞—Ç—ã</b>: ${profitPercent.value}%`
    ]


    return ctx.replyOrEdit(message.join("\r\n"), {
        parse_mode: "HTML",
        reply_markup: Markup.inlineKeyboard([
            [
                Markup.callbackButton(`${techValue.techOn ? "–í—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤" : "–í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤"}`, "admin#tech"),
            ],
            [
                Markup.callbackButton("–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç", "admin#percent"),
            ],
            [
                Markup.callbackButton("üîô –ù–∞–∑–∞–ª", "admin"),
            ]
        ]),
    })
};